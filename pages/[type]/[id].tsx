import React, { useRef } from 'react';
import MovieDetailHeader from '@/components/MovieDetailHeader/MovieDetailHeader';
import { GetStaticProps, GetStaticPaths, GetStaticPropsContext } from 'next';
import Head from 'next/head'

export interface MovieInfo {
    adult?: boolean,
    backdrop_path?: string,
    belongs_to_collection?: BelongsToCollection,
    budget?: number,
    genres?: Genres[],
    homepage?: string,
    id?: number,
    imdb_id?: string,
    original_language?: string,
    original_title?: string,
    overview?: string,
    popularity?: number,
    poster_path?: string,
    production_company?: ProductionCompany[],
    production_countries?: ProductionCountry[],
    release_date?: string,
    revenue?: number,
    runtime?: number,
    spoken_languague?: SpokenLanguague[],
    status?: string,
    tagline?: string,
    title?: string,
    video?: boolean,
    vote_average?: number,
    vote_count?: number
}

interface BelongsToCollection {
    id: number,
    name: string,
    poster_path: string
}

interface Genres {
    id: number,
    name: string
}

interface ProductionCompany {
    id: number,
    logo: string,
    name: string,
    origin_country: string
}

interface ProductionCountry {
    iso_3166_1: string,
    name: string
}

interface SpokenLanguague {
    english_name: string,
    iso_639_1: string,
    name: string
}

function MovieDetail(props: any) {
    const noContentRef = useRef<HTMLInputElement>(null)
    if (!props?.data?.id) return
    const data: MovieInfo = props.data
    return (
        <>
            <Head>
                <title>{`${data.original_title} - The Movie Database`}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div ref={noContentRef}>
                <MovieDetailHeader backdrop_path={data.backdrop_path} poster_path={data.poster_path} original_title={data.original_title} genres={data.genres}
                    runtime={data.runtime} adult={data.adult} vote_average={data.vote_average} tagline={data.tagline} overview={data.overview}
                />
            </div>
        </>
    );
}

export default MovieDetail;

export const getStaticPaths: GetStaticPaths = () => {
    return {
        paths: [],
        fallback: true,
    }
}

export const getStaticProps: GetStaticProps<any> = async (ctx: GetStaticPropsContext) => {
    const { type, id }: any = ctx.params
    const result = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL_MOVIEDB}${type}/${id}?api_key=${process.env.NEXT_PUBLIC_MOVIE_API_KEY}&language=en-US`)
    const data = await result.json()
    return {
        props: {
            data
        }
    }
}